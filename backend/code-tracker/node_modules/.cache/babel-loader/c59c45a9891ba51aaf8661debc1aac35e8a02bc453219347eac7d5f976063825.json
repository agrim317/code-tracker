{"ast":null,"code":"var _jsxFileName = \"/home/kingm01/codetracker/code-tracker/src/components/ThemeWrapper/ThemeWrapper.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const themes = {\n  dark: \"\",\n  light: \"white-content\"\n};\nconst ThemeContext = {\n  theme: themes.dark,\n  changeTheme: () => {}\n};\nexport default function ThemeContextWrapper(props) {\n  _s();\n  const [theme, setTheme] = useState(themes.dark);\n  function changeTheme(theme) {\n    setTheme(theme);\n  }\n  useEffect(() => {\n    switch (theme) {\n      case themes.light:\n        document.body.classList.add(\"white-content\");\n        break;\n      case themes.dark:\n      default:\n        document.body.classList.remove(\"white-content\");\n        break;\n    }\n  }, [theme]);\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: {\n      theme: theme,\n      changeTheme: changeTheme\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(ThemeContextWrapper, \"81LJbYGtqjdO775TVdpnETOnTlU=\");\n_c = ThemeContextWrapper;\nvar _c;\n$RefreshReg$(_c, \"ThemeContextWrapper\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","themes","dark","light","ThemeContext","theme","changeTheme","ThemeContextWrapper","props","_s","setTheme","document","body","classList","add","remove","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/kingm01/codetracker/code-tracker/src/components/ThemeWrapper/ThemeWrapper.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\n\nexport const themes = {\n  dark: \"\",\n  light: \"white-content\",\n};\nconst ThemeContext = ({\n  theme: themes.dark,\n  changeTheme: () => {},\n});\n\nexport default function ThemeContextWrapper(props) {\n  const [theme, setTheme] = useState(themes.dark);\n\n  function changeTheme(theme) {\n    setTheme(theme);\n  }\n\n  useEffect(() => {\n    switch (theme) {\n      case themes.light:\n        document.body.classList.add(\"white-content\");\n        break;\n      case themes.dark:\n      default:\n        document.body.classList.remove(\"white-content\");\n        break;\n    }\n  }, [theme]);\n\n  return (\n    <ThemeContext.Provider value={{ theme: theme, changeTheme: changeTheme }}>\n      {props.children}\n    </ThemeContext.Provider>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGnD,OAAO,MAAMC,MAAM,GAAG;EACpBC,IAAI,EAAE,EAAE;EACRC,KAAK,EAAE;AACT,CAAC;AACD,MAAMC,YAAY,GAAI;EACpBC,KAAK,EAAEJ,MAAM,CAACC,IAAI;EAClBI,WAAW,EAAEA,CAAA,KAAM,CAAC;AACtB,CAAE;AAEF,eAAe,SAASC,mBAAmBA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACjD,MAAM,CAACJ,KAAK,EAAEK,QAAQ,CAAC,GAAGb,QAAQ,CAACI,MAAM,CAACC,IAAI,CAAC;EAE/C,SAASI,WAAWA,CAACD,KAAK,EAAE;IAC1BK,QAAQ,CAACL,KAAK,CAAC;EACjB;EAEAP,SAAS,CAAC,MAAM;IACd,QAAQO,KAAK;MACX,KAAKJ,MAAM,CAACE,KAAK;QACfQ,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACC,GAAG,CAAC,eAAe,CAAC;QAC5C;MACF,KAAKb,MAAM,CAACC,IAAI;MAChB;QACES,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACE,MAAM,CAAC,eAAe,CAAC;QAC/C;IACJ;EACF,CAAC,EAAE,CAACV,KAAK,CAAC,CAAC;EAEX,oBACEL,OAAA,CAACI,YAAY,CAACY,QAAQ;IAACC,KAAK,EAAE;MAAEZ,KAAK,EAAEA,KAAK;MAAEC,WAAW,EAAEA;IAAY,CAAE;IAAAY,QAAA,EACtEV,KAAK,CAACU;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACM,CAAC;AAE5B;AAACb,EAAA,CAxBuBF,mBAAmB;AAAAgB,EAAA,GAAnBhB,mBAAmB;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}